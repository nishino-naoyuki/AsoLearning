package jp.ac.asojuku.asolearning.entity;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 特徴マスタ モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class CharactorMasterEntity implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 特徴ID. */
	private Integer charactorKindId;

	/** 特徴名. */
	private String name;

	/** 説明. */
	private String description;

	/** 特徴テーブル 一覧. */
	private Set<CharactorEntity> charactorSet;

	/**
	 * コンストラクタ.
	 */
	public CharactorMasterEntity() {
		this.charactorSet = new HashSet<CharactorEntity>();
	}

	/**
	 * 特徴ID を設定します.
	 * 
	 * @param charactorKindId
	 *            特徴ID
	 */
	public void setCharactorKindId(Integer charactorKindId) {
		this.charactorKindId = charactorKindId;
	}

	/**
	 * 特徴ID を取得します.
	 * 
	 * @return 特徴ID
	 */
	public Integer getCharactorKindId() {
		return this.charactorKindId;
	}

	/**
	 * 特徴名 を設定します.
	 * 
	 * @param name
	 *            特徴名
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * 特徴名 を取得します.
	 * 
	 * @return 特徴名
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * 説明 を設定します.
	 * 
	 * @param description
	 *            説明
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * 説明 を取得します.
	 * 
	 * @return 説明
	 */
	public String getDescription() {
		return this.description;
	}

	/**
	 * 特徴テーブル 一覧を設定します.
	 * 
	 * @param charactorSet
	 *            特徴テーブル 一覧
	 */
	public void setCharactorSet(Set<CharactorEntity> charactorSet) {
		this.charactorSet = charactorSet;
	}

	/**
	 * 特徴テーブル を追加します.
	 * 
	 * @param charactor
	 *            特徴テーブル
	 */
	public void addCharactor(CharactorEntity charactor) {
		this.charactorSet.add(charactor);
	}

	/**
	 * 特徴テーブル 一覧を取得します.
	 * 
	 * @return 特徴テーブル 一覧
	 */
	public Set<CharactorEntity> getCharactorSet() {
		return this.charactorSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((charactorKindId == null) ? 0 : charactorKindId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		CharactorMasterEntity other = (CharactorMasterEntity) obj;
		if (charactorKindId == null) {
			if (other.charactorKindId != null) {
				return false;
			}
		} else if (!charactorKindId.equals(other.charactorKindId)) {
			return false;
		}
		return true;
	}

}
