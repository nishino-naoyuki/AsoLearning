<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="make-war" name="AsoLearning">
	<echo message="=================================================="/>
	<echo message="WAR FILE BUILD SYSTEM"/>
	<echo message="written by n.nishino 2017.02.04"/>
	<echo message="=================================================="/>
    <property environment="env"/>
    <property name="TOMCAT_HOME" value="C:\apache-tomcat-7.0.61"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="WebContent" value="WebContent"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="AsoLearning.classpath">
        <pathelement location="${TOMCAT_HOME}/lib/servlet-api.jar"/>
        <pathelement location="${TOMCAT_HOME}/lib/jasper.jar"/>
        <pathelement location="${TOMCAT_HOME}/lib/jsp-api.jar"/>
        <pathelement location="${TOMCAT_HOME}/lib/el-api.jar"/>
        <pathelement location="${TOMCAT_HOME}/lib/annotations-api.jar"/>
        <pathelement location="WEB-INF/classes"/>
        <pathelement location="work"/>
    </path>
  	<path id="build.lib">
  	   <fileset dir="${WebContent}/WEB-INF/lib" includes="*.jar" />
   	   <fileset dir="${TOMCAT_HOME}/lib" includes="*.jar" />
  	</path>


    <target name="clean">
        <delete dir="war"/>
    </target>
    <target depends="clean" name="build">
        <mkdir dir="war/build"/>
        <mkdir dir="war/build/classes"/>
        <mkdir dir="war/build/view"/>
        <mkdir dir="war/build/tmp"/>
    	<echo message="${ant.project.name}: ${ant.file}"/>

    	<javac encoding="utf-8" debug="true" debuglevel="${debuglevel}" destdir="war/build/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="build.lib"/>
        </javac>
    	<copy todir="war/build/classes">
    		 <fileset dir="src" includes="message.properties"/>
   		 	 <fileset dir="linux_setting/" includes="app.properties"/>
  		 	 <fileset dir="linux_setting/" includes="logback.xml"/>
    	</copy>
    	<copy todir="war/build/view">
    		 <fileset dir="${WebContent}/view" includes="**/*.*"/>
    	</copy>

    </target>

    <target depends="clean" name="build-staging">
        <mkdir dir="war/build"/>
        <mkdir dir="war/build/classes"/>
        <mkdir dir="war/build/view"/>
        <mkdir dir="war/build/tmp"/>
    	<echo message="${ant.project.name}: ${ant.file}"/>

    	<javac encoding="utf-8" debug="true" debuglevel="${debuglevel}" destdir="war/build/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="build.lib"/>
        </javac>
    	<copy todir="war/build/classes">
    		 <fileset dir="src" includes="message.properties"/>
   		 	 <fileset dir="staging_setting" includes="app.properties"/>
   		 	 <fileset dir="src" includes="*.xml"/>
    	</copy>
    	<copy todir="war/build/view">
    		 <fileset dir="${WebContent}/view" includes="**/*.*"/>
    	</copy>

    </target>


    <target depends="clean" name="build-event">
        <mkdir dir="war/build"/>
        <mkdir dir="war/build/classes"/>
        <mkdir dir="war/build/view"/>
        <mkdir dir="war/build/tmp"/>
    	<echo message="${ant.project.name}: ${ant.file}"/>

    	<javac encoding="utf-8" debug="true" debuglevel="${debuglevel}" destdir="war/build/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="build.lib"/>
        </javac>
    	<copy todir="war/build/classes">
    		 <fileset dir="src" includes="message.properties"/>
   		 	 <fileset dir="event_setting" includes="app.properties"/>
   		 	 <fileset dir="src" includes="*.xml"/>
    	</copy>
    	<copy todir="war/build/view">
    		 <fileset dir="${WebContent}/view" includes="**/*.*"/>
    	</copy>

    </target>

    <target depends="build"  name="make-war">
    	<war destfile="war/${ant.project.name}.war" needxmlfile='false' >
    		<classes dir="war/build/classes" />
    		<lib dir="${WebContent}/WEB-INF/lib" />
    		<zipfileset dir="${WebContent}/view"
            prefix="view"/>
    		<zipfileset dir="${WebContent}/WEB-INF/tmp"
            prefix="WEB-INF/tmp"/>
    		<zipfileset dir="${WebContent}/WEB-INF/jsp"
            prefix="WEB-INF/jsp"/>
    	</war>
        <delete dir="war/build"/>
    </target>

    <target depends="build-staging"  name="make-war-for-staging">
    	<war destfile="war/st${ant.project.name}.war" needxmlfile='false' >
    		<classes dir="war/build/classes" />
    		<lib dir="${WebContent}/WEB-INF/lib" />
    		<zipfileset dir="${WebContent}/view"
            prefix="view"/>
    		<zipfileset dir="${WebContent}/WEB-INF/tmp"
            prefix="WEB-INF/tmp"/>
    		<zipfileset dir="${WebContent}/WEB-INF/jsp"
            prefix="WEB-INF/jsp"/>
    	</war>
        <delete dir="war/build"/>
    </target>

    <target depends="build-event"  name="make-war-for-event">
    	<war destfile="war/ev${ant.project.name}.war" needxmlfile='false' >
    		<classes dir="war/build/classes" />
    		<lib dir="${WebContent}/WEB-INF/lib" />
    		<zipfileset dir="${WebContent}/view"
            prefix="view"/>
    		<zipfileset dir="${WebContent}/WEB-INF/tmp"
            prefix="/WEB-INF/tmp"/>
    		<zipfileset dir="${WebContent}/WEB-INF/jsp"
            prefix="WEB-INF/jsp"/>
    	</war>
        <delete dir="war/build"/>
    </target>
</project>
